openapi: 3.0.0
info:
  title: OpenApi 3.0 ReST interface for Accordion Orchestrator
  description: This is the Yaml file that goes with our server code
  version: 1.0.0
servers:
- url: /orchestrator
paths:
  /appmodel:
    get:
      tags:
      - AppModel
      description: Return the list of the name of Yaml files that contains the representation
        of the model of the applications submitted until now and the respective identifiers
      operationId: appmodel_read_all
      responses:
        "200":
          description: Successfully read the list of the name of App model Yaml files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200'
                x-content-type: application/json
      x-openapi-router-controller: dynamic_orchestrator.controllers.app_model_controller
    post:
      tags:
      - AppModel
      operationId: appmodel_create
      requestBody:
        description: Post a Yaml file that contains the representation of the model
          of an application and a unique identifier. If the identifier exists yet,
          an error is returned. Use PUT to update an existed application model.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: Successfully created AppModel Yaml file with the given unique
            identifier
        "409":
          description: An AppModel Yaml file exists yet with the given identifier 
        default:
          description: Unexpected error
      x-openapi-router-controller: dynamic_orchestrator.controllers.app_model_controller
  /appmodel/{app_id}:
    put:
      tags:
      - AppModel
      operationId: appmodel_update
      parameters:
      - name: app_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Substitute the Yaml file that contains the representation of
          the model of the application with the given identifier with the new file
          passed as a parameter      
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: AppModel file with the given identifier updated successfully
        "409":
          description: AppModel file with the given identifier was not found
        default:
          description: Unexpected error
      x-openapi-router-controller: dynamic_orchestrator.controllers.app_model_controller
    delete:
      operationId: appmodel_delete
      parameters:
      - name: app_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted AppModel Yaml file with the given unique
            identifier
      x-openapi-router-controller: dynamic_orchestrator.controllers.app_model_controller
  /monitordata:
    get:
      tags:
      - MonitorData
      description: Return the list of the name of Yaml files that contains the availability
        of resources of an entire federation and the respective identifiers
      operationId: monitordata_read_all
      responses:
        "200":
          description: Successfully read the list of the name of MonitorData Yaml files
            files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
          x-content-type: application/json
      x-openapi-router-controller: dynamic_orchestrator.controllers.monitor_data_controller
    post:
      tags:
      - MonitorData
      operationId: monitordata_create
      requestBody:
        description: Post a Yaml file that contains the representation of the availability
          of resources of an entire federation and a unique identifier. If the identifier
          exists yet, an error is returned. Use PUT to update an existed federation.
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "200":
          description: Successfully created MonitorData Yaml file with the given unique
            identifier
        default:
          description: Unexpected error
      x-openapi-router-controller: dynamic_orchestrator.controllers.monitor_data_controller
  /monitordata/{federation_id}:
    put:
      tags:
      - MonitorData
      operationId: monitordata_update
      parameters:
      - name: federation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Substitute a Yaml file that contains the representation of the
          availability of resources of an entire federation with the given identifier
          with the new file passed as a parameter
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          description: MonitorData file with the given identifier updated successfully
        "409":
          description: MonitorData file with the given identifier was not found
        default:
          description: Unexpected error
      x-openapi-router-controller: dynamic_orchestrator.controllers.monitor_data_controller
    delete:
      operationId: monitordata_delete
      parameters:
      - name: federation_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully deleted MonitorData Yaml file with the given unique
            identifier
      x-openapi-router-controller: dynamic_orchestrator.controllers.monitor_data_controller
  /depplan/:      
    get:
      operationId: depplan_create
      parameters:
      - name: app_id
        in: query
        description: Application model Yaml file identifier
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: federation_id
        in: query
        description: MonitorData resources availabilit Yaml file identifier
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Succesfully return one or more Yaml files that contains the deployment
            plan, each referred to a single domain
          content:
            application/json:
              schema:
                type: object                
                properties:
                  file:
                    type: string
                    format: binary
          x-content-type: application/json
        "409":
            description: The AppModel Yaml file or the MonitorData Yaml file do not exist or could not be opened 
        default:
          description: Unexpected error
      x-openapi-router-controller: dynamic_orchestrator.controllers.default_controller
components:
  schemas:
    inline_response_200:
      properties:
        filename:
          type: string
        app_id:
          type: string
      example:
        filename: filename
        app_id: app_id
    body:
      type: object
      properties:
        app_id:
          type: string
        file:
          type: string
          format: binary
    inline_response_200_1:
      properties:
        filename:
          type: string
        federation_id:
          type: string
      example:
        federation_id: federation_id
        filename: filename
    body_1:
      type: object
      properties:
        federation_id:
          type: string
        file:
          type: string
          format: binary